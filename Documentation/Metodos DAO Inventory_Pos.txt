//METODOS DAO COMPRA
public Compra getNumFacLast() {
        EntityManager em = getEntityManager();
        try {
            return (Compra) em.createNativeQuery("Select * from compra order by co_factcompra desc limit 1", Compra.class).getResultList().get(0);
        }catch(Exception e){
            return null;
        } finally {
            em.close();
        }
    } 
	
//Metodos Dao Departamento//
public Departamento findDepartamentoByDescripcion(String descripcion) {
        EntityManager em = getEntityManager();
        try {
            return (Departamento) em.createNamedQuery("Departamento.findByDpDescripcion", Departamento.class).setParameter("dpDescripcion", descripcion).getResultList().get(0);
        }catch(Exception e){
             return null;
        }finally {
            em.close();           
        }
    }


//Metodos Dao Inventario//
public Inventario getInventarioLast() {
        EntityManager em = getEntityManager();
        try {
            return (Inventario) em.createNativeQuery("Select * from inventario order by in_codigo desc limit 1", Inventario.class).getResultList().get(0);
        }catch(Exception e){
            return null;
        } finally {
            em.close();
        }
    }

//Metodos Dao Ventas//
public Venta getNumFacLast() {
        EntityManager em = getEntityManager();
        try {
            return (Venta) em.createNativeQuery("Select * from venta order by ve_factventa desc limit 1", Venta.class).getResultList().get(0);
        }catch(Exception e){
            return null;
        } finally {
            em.close();
        }
    }


    public Double getSumPrecioVentaTotal(String date) {
        EntityManager em = getEntityManager();
        try {
            return (Double) em.createNativeQuery("SELECT SUM(ve_preciototal) FROM venta WHERE date(ve_fechaventa)='"+date+"'").getResultList().get(0);
        } finally {
            em.close();
        }
    }
    
    public Double getSumCostoVentaTotal(String date) {
        EntityManager em = getEntityManager();
        try {
            return (Double) em.createNativeQuery("SELECT SUM(ve_costototal) FROM venta WHERE date(ve_fechaventa)='"+date+"'").getResultList().get(0);
        } finally {
            em.close();
        }
    }
	
	
//Metodos Dao Dventa
public List<Object[]> getBestProducts() {
        EntityManager em = getEntityManager();
        try {
            List<Object[]> l = (List<Object[]>) em.createNativeQuery("SELECT dve_idinventario, sum(dve_cantidad) from dventa GROUP by dve_idinventario order by sum(dve_cantidad) desc limit 10").getResultList();      
            return l;
        }catch(Exception e){            
            return null;
        } finally {
            em.close();
        }
    } 
	
	